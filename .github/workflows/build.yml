name: Build ExpressLRS
on: [push, pull_request]
jobs:
  targets:
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.set-targets.outputs.targets }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - id: set-targets
      run: echo "targets=[$(grep -r "\[env:" src/targets/*.ini src/bp_logger/*.ini | sed 's/.*://' | sed s/.$// | egrep -v "(_BF|_WIFI)" | tr '\n' ','  | sed 's/,$/"\n/' | sed 's/,/","/'g | sed 's/^/"/')]" >> $GITHUB_OUTPUT

  build:
    needs: targets
    strategy:
      fail-fast: false
      matrix:
        target: ${{fromJSON(needs.targets.outputs.targets)}}
    runs-on: ubuntu-latest
    steps:
    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v4

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.target }}

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio
        pip install wheel
        pip install six

    - name: Cache PlatformIO
      uses: actions/cache@v3
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-platformio

    - name: Run PlatformIO
      run: |
        platformio platform update
        platformio platform install native
        mkdir -p ~/artifacts
        cd src
        rm -rf .pio
        export EXPRESSLRS_FLAGS="-DRegulatory_Domain_EU_868 -DRegulatory_Domain_ISM_2400_800kHz -DRegulatory_Domain_ISM_2400_FLRC"
        platformio run -e ${{ matrix.target }}
        case ${{matrix.target}} in
          *LOGGER_*)
            OUTDIR=~/artifacts/LOGGER/`echo ${{ matrix.target }}`
            mkdir -p $OUTDIR
            mv .pio/build/${{ matrix.target }}/*.{elrs,bin,bin.gz} $OUTDIR >& /dev/null || :
            ;;
          *)
            ;;
        esac

    - name: Store Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: firmware
        path: ~/artifacts/**/*
      continue-on-error: true
